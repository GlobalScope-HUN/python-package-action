name: 'Python package action'
description: 'Create Python application packages: source, wheel and Debian distributions'
branding:
  icon: 'package'
  color: 'yellow'

inputs:
  python-version:
    description: 'Python version'
    required: false
    default: '3.9'
  add-source-dist:
    description: 'Should create source distribution?'
    required: false
    default: 'true'
  add-wheel-dist:
    description: 'Should create wheel distribution?'
    required: false
    default: 'true'
  debian-dist-type:
    description: 'Debian distribution type (application / library / none)'
    required: false
    default: 'none'
  debian-lib-command:
    description: 'Debian library build command (FPM available)'
    required: false
    default: 'fpm -s python -t deb --package dist --force --log warn --python-bin python3 --python-package-name-prefix python3 setup.py'
  debian-app-command:
    description: 'Debian application build command (dh_virtualenv available)'
    required: false
    default: 'dpkg-buildpackage -us -ui -uc --buildinfo-option=-udist --buildinfo-option=-Odist/package.buildinfo --changes-option=-udist --changes-option=-Odist/package.changes'

runs:
  using: 'composite'
  steps:
    - name: Set up Python 3
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python-version }}
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install .
    - if: ${{ inputs.add-source-dist == 'true' }}
      name: Create source distribution
      shell: bash
      run: python setup.py sdist
    - if: ${{ inputs.add-wheel-dist == 'true' }}
      name: Create wheel distribution
      shell: bash
      run: |
        pip install wheel
        python setup.py bdist_wheel
    - if: ${{ inputs.debian-dist-type == 'library' }}
      name: Create debian distribution (library)
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y ruby ruby-dev rubygems build-essential
        sudo gem install -N fpm
        eval sudo -E ${{ inputs.debian-lib-command }}
    - if: ${{ inputs.debian-dist-type == 'application' }}
      name: Create debian distribution (application)
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential debhelper devscripts equivs dh-virtualenv python3-virtualenv
        eval sudo -E ${{ inputs.debian-app-command }}
